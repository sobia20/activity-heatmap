{"remainingRequest":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/src/components/HeatMap.vue?vue&type=script&charset=utf-8&lang=js&","dependencies":[{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/src/components/HeatMap.vue","mtime":1581582333404},{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sobiaa/chEMBL-Heatmap/frontend/activity-heatmap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KIAppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7Cgp2YXIgbWFyZ2luID0ge3RvcDogMzAsIHJpZ2h0OiAzMCwgYm90dG9tOiAzMCwgbGVmdDogMTAwfSwKICB3aWR0aCA9IDQ1MCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0ICsgNDAwLAogIGhlaWdodCA9IDQ1MCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tIDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVhdE1hcCcsCiAgbWV0aG9kczp7CiAgICBoZWF0bWFwKHVybF92YWwsIGNvbG9yX2NvbHVtbil7CiAgICAgIGQzLnNlbGVjdCgic3ZnIikucmVtb3ZlKCk7CgogICAgICAvL3JlbW92ZSB0b29sdGlwIGRpdiBpZiBleGlzdHMKICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0b29scyIpKXsKICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRvb2xzIik7CiAgICAgICAgZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZGl2KTsKICAgICAgICB9CiAgICAvLyBhcHBlbmQgdGhlIHN2ZyBvYmplY3QgdG8gdGhlIGJvZHkgb2YgdGhlIHBhZ2UKICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiNteV9oZWF0bWFwIikKICAgIC5odG1sKCI8aDI+ICIrY29sb3JfY29sdW1uKQogICAgLmFwcGVuZCgic3ZnIikKICAgICAgLmF0dHIoIndpZHRoIiwgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkKICAgICAgLmF0dHIoImhlaWdodCIsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKQogICAgLmFwcGVuZCgiZyIpCiAgICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLAogICAgICAgICAgICAidHJhbnNsYXRlKCIgKyBtYXJnaW4ubGVmdCArICIsIiArIG1hcmdpbi50b3AgKyAiKSIpOwogICAgCiAgICAvLyBMYWJlbHMgb2Ygcm93IGFuZCBjb2x1bW5zCiAgICB2YXIgdGFyZ2V0X3ZhbHVlcyA9IFsiQ0hFTUJMMzI1IiwKICAgICJDSEVNQkwxOTM3IiwKICAgICJDSEVNQkwxODI5IiwKICAgICJDSEVNQkwzNTI0IiwKICAgICJDSEVNQkwyNTYzIiwKICAgICJDSEVNQkwxODY1IiwKICAgICJDSEVNQkwyNzE2IiwKICAgICJDSEVNQkwzMTkyIiwKICAgICJDSEVNQkw0MTQ1IiwKICAgICJDSEVNQkw1MTAzIiwKICAgICJDSEVNQkwzMzEwIl0KICAgIHZhciBtb2xlY3VsZV92YWx1ZXMgPSBbIkNIRU1CTDk4IiwKICAgICJDSEVNQkw5OSIsCiAgICAiQ0hFTUJMMjc3NTkiLAogICAgIkNIRU1CTDIwMTgzMDIiLAogICAgIkNIRU1CTDQ4MzI1NCIsCiAgICAiQ0hFTUJMMTIxMzQ5MCIsCiAgICAiQ0hFTUJMMzU2NzY5IiwKICAgICJDSEVNQkwyNzI5ODAiLAogICAgIkNIRU1CTDQzMDA2MCIsCiAgICAiQ0hFTUJMMTE3MzQ0NSIsCiAgICAiQ0hFTUJMMzU2MDY2IiwKICAgICJDSEVNQkwxOTE0NzAyIl0KIAogICAgLy8gQnVpbGQgWCBzY2FsZXMgYW5kIGF4aXM6CiAgICB2YXIgeCA9IGQzLnNjYWxlQmFuZCgpCiAgICAgIC5yYW5nZShbIDAsIHdpZHRoIF0pCiAgICAgIC5kb21haW4odGFyZ2V0X3ZhbHVlcykKICAgICAgLnBhZGRpbmcoMC4wMSk7CgogICAgc3ZnLmFwcGVuZCgiZyIpCiAgICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKDAsIiArIGhlaWdodCArICIpIikKICAgICAgLmNhbGwoZDMuYXhpc0JvdHRvbSh4KSkKCiAgICAvLyBCdWlsZCBZIHNjYWxlcyBhbmQgYXhpczoKICAgIHZhciB5ID0gZDMuc2NhbGVCYW5kKCkKICAgICAgLnJhbmdlKFsgaGVpZ2h0LCAwIF0pCiAgICAgIC5kb21haW4obW9sZWN1bGVfdmFsdWVzKQogICAgICAucGFkZGluZygwLjAxKTsKICAgIAogICAgc3ZnLmFwcGVuZCgiZyIpCiAgICAgIC5jYWxsKGQzLmF4aXNMZWZ0KHkpKTsKCiAgICBkMy5qc29uKHVybF92YWwpLnRoZW4oZnVuY3Rpb24oZGF0YSl7CgogICAgICAgIC8vIEJ1aWxkIGNvbG9yIHNjYWxlCiAgICAgICAgY29uc3QgbWluID0gZDMubWluKGRhdGEubWFwKGQgPT4gZFtjb2xvcl9jb2x1bW5dKSk7CiAgICAgICAgY29uc3QgbWF4ID0gZDMubWF4KGRhdGEubWFwKGQgPT4gZFtjb2xvcl9jb2x1bW5dKSk7CiAgICAgICAgCiAgICAgICAgdmFyIG15Q29sb3IgPSBkMy5zY2FsZUxpbmVhcigpCiAgICAgICAgICAuZG9tYWluKFttaW4gLCBtYXggXSkKICAgICAgICAgIC5yYW5nZShbIiNkZGVlZWEiLCAiIzY5YjNhMiJdKTsgCiAgICAgICAgIAogICAgICAgIAogICAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpOyAgICAgCiAgICAgICAgdmFyIHRvb2x0aXAgPSBkMy5zZWxlY3QoIiNteV9oZWF0bWFwIikKICAgICAgICAgIC5hcHBlbmQoImRpdiIpCiAgICAgICAgICAuc3R5bGUoIm9wYWNpdHkiLCAwKQogICAgICAgICAgLmF0dHIoImlkIiwgInRvb2xzIikKICAgICAgICAgIC5hdHRyKCJjbGFzcyIsICJ0b29sdGlwIikKICAgICAgICAgIC5zdHlsZSgiYmFja2dyb3VuZC1jb2xvciIsICIjNjliM2EyIikKICAgICAgICAgIC5zdHlsZSgiYm9yZGVyIiwgInNvbGlkIikKICAgICAgICAgIC5zdHlsZSgiYm9yZGVyLXdpZHRoIiwgIjJweCIpCiAgICAgICAgICAuc3R5bGUoImJvcmRlci1yYWRpdXMiLCAiNXB4IikKICAgICAgICAgIC5zdHlsZSgicGFkZGluZyIsICI1cHgiKQogICAgICAgIC8vIFRocmVlIGZ1bmN0aW9uIHRoYXQgY2hhbmdlIHRoZSB0b29sdGlwIHdoZW4gdXNlciBob3ZlciAvIG1vdmUgLyBsZWF2ZSBhIGNlbGwKICAgICAgICB2YXIgbW91c2VvdmVyID0gZnVuY3Rpb24oZCkgewogICAgICAgICAgdG9vbHRpcC5zdHlsZSgib3BhY2l0eSIsIDEpCiAgICAgICAgfQogICAgICAgIHZhciBtb3VzZW1vdmUgPSBmdW5jdGlvbihkKSB7CiAgICAgICAgICB0b29sdGlwCiAgICAgICAgICAgIC5odG1sKCJUaGUgZXhhY3QgdmFsdWUgb2Y8YnI+dGhpcyBjZWxsIGlzOiAiICsgZFtjb2xvcl9jb2x1bW5dKQogICAgICAgICAgICAuc3R5bGUoImxlZnQiLCAoZDMubW91c2UodGhpcylbMF0rNzApICsgInB4IikKICAgICAgICAgICAgLnN0eWxlKCJ0b3AiLCAoZDMubW91c2UodGhpcylbMV0pICsgInB4IikKICAgICAgICB9CiAgICAgICAgdmFyIG1vdXNlbGVhdmUgPSBmdW5jdGlvbihkKSB7CiAgICAgICAgICB0b29sdGlwLnN0eWxlKCJvcGFjaXR5IiwgMCkKICAgICAgICB9CgogICAgLy8gYWRkIHRoZSBzcXVhcmVzCiAgICBzdmcuc2VsZWN0QWxsKCkKICAgICAgLmRhdGEoZGF0YSwgZnVuY3Rpb24oZCkgewogICAgICAgIHJldHVybiBkWyd0YXJnZXQnXSsnOicrZFsnbW9sZWN1bGUnXTt9KQogICAgICAuZW50ZXIoKQogICAgICAuYXBwZW5kKCJyZWN0IikKICAgICAgICAuYXR0cigieCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHgoZFsndGFyZ2V0J10pIH0pCiAgICAgICAgLmF0dHIoInkiLCBmdW5jdGlvbihkKSB7IHJldHVybiB5KGRbJ21vbGVjdWxlJ10pIH0pCiAgICAgICAgLmF0dHIoIndpZHRoIiwgeC5iYW5kd2lkdGgoKSApCiAgICAgICAgLmF0dHIoImhlaWdodCIsIHkuYmFuZHdpZHRoKCkgKQogICAgICAgIC5zdHlsZSgiZmlsbCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIG15Q29sb3IoZFtjb2xvcl9jb2x1bW5dKX0gKQogICAgICAub24oIm1vdXNlb3ZlciIsIG1vdXNlb3ZlcikKICAgICAgLm9uKCJtb3VzZW1vdmUiLCBtb3VzZW1vdmUpCiAgICAgIC5vbigibW91c2VsZWF2ZSIsIG1vdXNlbGVhdmUpCgogIH0pIAogICAgfQogIH0KCn0K"},{"version":3,"sources":["HeatMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"HeatMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"hasheatmap\">\n    <meta charset=\"utf-8\" http-equiv=\"encoding\">\n\n    <v-btn color=\"success\" dark large v-on:click=\"heatmap('http://10.5.0.5:5000/activities/activity_count', 'activity_count')\">Number fo Activity data points</v-btn> \n   \n    <v-btn color=\"success\" dark large v-on:click=\"heatmap('http://10.5.0.5:5000/activities/max_pchembl_value', 'max_pchembl_value')\">Maximum pChEMBL_value</v-btn>\n  \n    <v-btn color=\"success\" dark large v-on:click=\"heatmap('http://10.5.0.5:5000/activities/avg_pchembl_value', 'avg_pchembl_value')\">Average pChEMBL_value</v-btn>\n \n    <div id=\"my_heatmap\" ></div>\n  </div>\n  \n</template>\n\n<script src=\"d3/d3.js\" charset=\"utf-8\"></script>\n<script charset=\"utf-8\"> \nimport * as d3 from 'd3';\n\nvar margin = {top: 30, right: 30, bottom: 30, left: 100},\n  width = 450 - margin.left - margin.right + 400,\n  height = 450 - margin.top - margin.bottom ;\n\nexport default {\n  name: 'HeatMap',\n  methods:{\n    heatmap(url_val, color_column){\n      d3.select(\"svg\").remove();\n\n      //remove tooltip div if exists\n      if (document.getElementById(\"tools\")){\n        var div = document.getElementById(\"tools\");\n        div.parentNode.removeChild(div);\n        }\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#my_heatmap\")\n    .html(\"<h2> \"+color_column)\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    // Labels of row and columns\n    var target_values = [\"CHEMBL325\",\n    \"CHEMBL1937\",\n    \"CHEMBL1829\",\n    \"CHEMBL3524\",\n    \"CHEMBL2563\",\n    \"CHEMBL1865\",\n    \"CHEMBL2716\",\n    \"CHEMBL3192\",\n    \"CHEMBL4145\",\n    \"CHEMBL5103\",\n    \"CHEMBL3310\"]\n    var molecule_values = [\"CHEMBL98\",\n    \"CHEMBL99\",\n    \"CHEMBL27759\",\n    \"CHEMBL2018302\",\n    \"CHEMBL483254\",\n    \"CHEMBL1213490\",\n    \"CHEMBL356769\",\n    \"CHEMBL272980\",\n    \"CHEMBL430060\",\n    \"CHEMBL1173445\",\n    \"CHEMBL356066\",\n    \"CHEMBL1914702\"]\n \n    // Build X scales and axis:\n    var x = d3.scaleBand()\n      .range([ 0, width ])\n      .domain(target_values)\n      .padding(0.01);\n\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n\n    // Build Y scales and axis:\n    var y = d3.scaleBand()\n      .range([ height, 0 ])\n      .domain(molecule_values)\n      .padding(0.01);\n    \n    svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n    d3.json(url_val).then(function(data){\n\n        // Build color scale\n        const min = d3.min(data.map(d => d[color_column]));\n        const max = d3.max(data.map(d => d[color_column]));\n        \n        var myColor = d3.scaleLinear()\n          .domain([min , max ])\n          .range([\"#ddeeea\", \"#69b3a2\"]); \n         \n        \n        // console.log(data);     \n        var tooltip = d3.select(\"#my_heatmap\")\n          .append(\"div\")\n          .style(\"opacity\", 0)\n          .attr(\"id\", \"tools\")\n          .attr(\"class\", \"tooltip\")\n          .style(\"background-color\", \"#69b3a2\")\n          .style(\"border\", \"solid\")\n          .style(\"border-width\", \"2px\")\n          .style(\"border-radius\", \"5px\")\n          .style(\"padding\", \"5px\")\n        // Three function that change the tooltip when user hover / move / leave a cell\n        var mouseover = function(d) {\n          tooltip.style(\"opacity\", 1)\n        }\n        var mousemove = function(d) {\n          tooltip\n            .html(\"The exact value of<br>this cell is: \" + d[color_column])\n            .style(\"left\", (d3.mouse(this)[0]+70) + \"px\")\n            .style(\"top\", (d3.mouse(this)[1]) + \"px\")\n        }\n        var mouseleave = function(d) {\n          tooltip.style(\"opacity\", 0)\n        }\n\n    // add the squares\n    svg.selectAll()\n      .data(data, function(d) {\n        return d['target']+':'+d['molecule'];})\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", function(d) { return x(d['target']) })\n        .attr(\"y\", function(d) { return y(d['molecule']) })\n        .attr(\"width\", x.bandwidth() )\n        .attr(\"height\", y.bandwidth() )\n        .style(\"fill\", function(d) { return myColor(d[color_column])} )\n      .on(\"mouseover\", mouseover)\n      .on(\"mousemove\", mousemove)\n      .on(\"mouseleave\", mouseleave)\n\n  }) \n    }\n  }\n\n}\n</script>\n<style>\n#hasheatmap {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}